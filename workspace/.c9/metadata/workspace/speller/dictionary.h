{"filter":false,"title":"dictionary.h","tooltip":"/speller/dictionary.h","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":17,"column":22},"action":"remove","lines":["// Declares a dictionary's functionality","","#ifndef DICTIONARY_H","#define DICTIONARY_H","","#include <stdbool.h>","","// Maximum length for a word","// (e.g., pneumonoultramicroscopicsilicovolcanoconiosis)","#define LENGTH 45","","// Prototypes","bool check(const char *word);","bool load(const char *dictionary);","unsigned int size(void);","bool unload(void);","","#endif // DICTIONARY_H"],"id":2}],[{"start":{"row":0,"column":0},"end":{"row":44,"column":0},"action":"insert","lines":["/**"," * Declares a dictionary's functionality."," */","","#ifndef DICTIONARY_H","#define DICTIONARY_H","","#include <stdbool.h>","#include <stddef.h>","#include <stdio.h>","#include <stdlib.h>","#include <string.h>","#include <ctype.h>","","// maximum length for a word","// (e.g., pneumonoultramicroscopicsilicovolcanoconiosis)","#define LENGTH 45","","","// to define the size of the hashtable","","#define HASHTABLE_SIZE 65536","","/**"," * Returns true if word is in dictionary else false."," */","bool check(const char *word);","","/**"," * Loads dictionary into memory. Returns true if successful else false."," */","bool load(const char *dictionary);","","/**"," * Returns number of words in dictionary if loaded else 0 if not yet loaded."," */","unsigned int size(void);","","/**"," * Unloads dictionary from memory.  Returns true if successful else false."," */","bool unload(void);","","#endif // DICTIONARY_H",""],"id":3}]]},"ace":{"folds":[],"scrolltop":113,"scrollleft":0,"selection":{"start":{"row":21,"column":28},"end":{"row":21,"column":28},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1533145232464,"hash":"776c702d646bcddb40bbb516a9138b7d3c00f270"}